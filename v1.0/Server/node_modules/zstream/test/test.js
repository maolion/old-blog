/*
 * ${project} < ${FILE} >
 *
 * @DATE    ${DATE}
 * @VERSION ${version}
 * @AUTHOR  ${author}
 * 
 * ----------------------------------------------------------------------------
 *
 * ----------------------------------------------------------------------------
 */



var Path = require( "path" ) ,
    fs = require('fs'),
    Parser = require('./../zstream').Parser,
    fstream = require( "fstream" ),
    simpleFlatPath = Path.join( __dirname, "/zipfiles/debug.zip" );
    simpleFlatZip = fs.readFileSync(simpleFlatPath);

var readStream = fs.createReadStream('zipfiles/debug.zip');
var writeStream = fstream.Writer('zipfiles/debug');
/*
readStream
  .pipe(Parser())
  .pipe(writeStream)*/


var p = new Parser();


p.on( "entry", function( file ){
    //console.log( file.header );
    console.log( file.path );
    //console.log(  );
    //var x = file.pipe(  )
    //console.log( file.constructor );
    //console.log( file.on );
    /*file.on( "finish", function(){
        console.log("x");
    } )*/
    var x = fs.createWriteStream( "zipfiles/a/" + file.path );
    //console.log( file );
    //x.open(  );
    x.on( "pipe", function( a ){
        //x.end();
        //console.log( a.constructor );
        /*a.on( "p", function(){
            console.log("a");
        } )*/
        /*console.dir( a );
        a.on( "end", function(){
            console.log( "end" );
        } )*/
        //console.log( x.write );
        //console.log( x )
        //console.log( arguments );
    } );
    file.pipe( x );
    //x.write( file.compressedData.toString( "utf8" ) );
    //console.log( file.compressedData.toString( "utf8", 0, file.uncompressedSize ) );
} );
p.on( "end", function(  ){
    //console.log( "end", arguments );
} )
fs.readFile(simpleFlatPath, function( err, data ){
    //console.log( data );
    p.parse( data )
} )
//p.parse(  )
//readStream.pipe( p.parse() )



